//
//  RegisterViewController.swift
//  project
//
//  Created by Lâm Phạm on 8/15/16.
//  Copyright © 2016 admin. All rights reserved.
//

import UIKit


class RegisterViewController: UIViewController, UIPopoverPresentationControllerDelegate {

@IBOutlet weak var registerNavBar: UINavigationItem!
@IBOutlet weak var notiButton: UIButton!
@IBOutlet weak var menuButton: UIButton!



@IBOutlet weak var imgNameIcon: UIImageView!
@IBOutlet weak var txtName: UITextField!
@IBOutlet weak var imgPhoneIcon: UIImageView!
@IBOutlet weak var txtPhone: UITextField!
@IBOutlet weak var imgAddressIcon: UIImageView!
@IBOutlet weak var txtAddress: UITextField!
@IBOutlet weak var registerButton: UIButton!
@IBOutlet weak var cancelButton: UIButton!
@IBOutlet weak var imgRegister: UIImageView!

//Register Button Tapped
@IBAction func registerButtonTapped(sender: AnyObject) {
//declare Allert
let registerAlert = UIAlertController(title: "Alert", message: "Bạn phải nhập đầy đủ thông tin", preferredStyle: .Alert)
//Alert Action
let okAction = UIAlertAction(title: "OK", style: .Cancel, handler: {(loginAlert) -> Void in ()})
registerAlert.addAction(okAction)
//check the value of text field
if (((txtName.text?.isEmpty)! || (txtPhone.text?.isEmpty)! || (txtAddress.text?.isEmpty)!)){
//Call alert
self.presentViewController(registerAlert, animated: true, completion: nil)
}else {
print("Register Successfully")
}
}
//Cancel Button Tapped
@IBAction func cancelButtonTapped(sender: AnyObject) {
print("cancel")
}

@IBAction func notificationButtonTapped(sender: AnyObject) {
let notificationAlert = UIAlertController(title: "Thông báo", message: "Bạn có tin nhắn mới", preferredStyle: .Alert)
let cancelAction = UIAlertAction(title: "Back", style: .Cancel, handler: {(notificationAlert) -> Void in ()})
notificationAlert.addAction(cancelAction)
self.presentViewController(notificationAlert, animated: true, completion: nil)
}



override func viewDidLoad() {
super.viewDidLoad()

//background
view.backgroundColor = UIColorFromRGB(0xECECEC)

//logo customize
imgRegister.frame = CGRect(x: 65, y: 70, width: 190, height: 140)
imgRegister.image = UIImage(named: "contact.png")
imgRegister.translatesAutoresizingMaskIntoConstraints = true
imgNameIcon.frame = CGRect(x: 10, y: 230, width: 30, height: 30)
imgNameIcon.image = UIImage(named: "contact.png")
imgNameIcon.translatesAutoresizingMaskIntoConstraints = true
imgPhoneIcon.frame = CGRect(x: 10, y: 280, width: 30, height: 30)
imgPhoneIcon.image = UIImage(named: "mobile.png")
imgPhoneIcon.translatesAutoresizingMaskIntoConstraints = true
imgAddressIcon.frame = CGRect(x: 10, y: 330, width: 30, height: 30)
imgAddressIcon.image = UIImage(named: "address.png")
imgAddressIcon.translatesAutoresizingMaskIntoConstraints = true

//textfield customize
txtName.frame = CGRect(x: 30, y: 230, width: 260, height: 30)
txtName.placeholder = "Họ và tên"
txtName.translatesAutoresizingMaskIntoConstraints = true

txtPhone.frame = CGRect(x: 30, y: 280, width: 260, height: 30)
txtPhone.placeholder = "Số điện thoại"
txtPhone.translatesAutoresizingMaskIntoConstraints = true

txtAddress.frame = CGRect(x: 30, y: 330, width: 260, height: 30)
txtAddress.placeholder = "Địa chỉ"
txtAddress.translatesAutoresizingMaskIntoConstraints = true

//button customize
registerButton.frame = CGRect(x: 30, y: 380, width: 260, height: 30)
registerButton.translatesAutoresizingMaskIntoConstraints = true
registerButton.frame = CGRect(x: 30, y: 430, width: 260, height: 30)
registerButton.backgroundColor = UIColorFromRGB(0xF00020)
registerButton.setTitle("Đăng ký", forState: .Normal)
registerButton.addTarget(self, action: #selector(cancelButtonTapped), forControlEvents: .TouchUpInside)
registerButton.layer.cornerRadius = 6
self.view.addSubview(cancelButton)
registerButton.translatesAutoresizingMaskIntoConstraints = true

cancelButton.frame = CGRect(x: 30, y: 380, width: 260, height: 30)
cancelButton.translatesAutoresizingMaskIntoConstraints = true
cancelButton.frame = CGRect(x: 30, y: 430, width: 260, height: 30)
cancelButton.backgroundColor = UIColorFromRGB(0xF00020)
cancelButton.setTitle("Thoát", forState: .Normal)
cancelButton.addTarget(self, action: #selector(cancelButtonTapped), forControlEvents: .TouchUpInside)
cancelButton.layer.cornerRadius = 6
self.view.addSubview(cancelButton)
cancelButton.translatesAutoresizingMaskIntoConstraints = true

//Navigation Bar customize
registerNavBar.title = "Đăng nhập"
self.navigationController?.navigationBar.titleTextAttributes = [NSForegroundColorAttributeName:UIColorFromRGB(0xF00020)]

//menu button on NavBar
menuButton.setImage(UIImage(named: "menu.png"), forState: .Normal)
menuButton.frame = CGRect(x: 0, y: 0, width: 30, height: 30)
menuButton.addTarget(self, action: #selector(showPopOver), forControlEvents: .TouchUpInside)
menuButton.setTitle("", forState: .Normal)
let menuNavBar = UIBarButtonItem()
menuNavBar.customView = menuButton
menuNavBar.enabled = false //disable menu button

//noti button on NavBar
notiButton.frame = CGRect(x: 0, y: 0, width: 30, height: 30)
notiButton.layer.cornerRadius = 0.5 * notiButton.bounds.size.width
notiButton.setTitle("!", forState: .Normal)
notiButton.setTitleColor(UIColor.whiteColor(), forState: .Normal)
notiButton.backgroundColor = UIColorFromRGB(0xF00020)

notiButton.addTarget(self, action: #selector(notificationButtonTapped), forControlEvents: .TouchUpInside)
let notiNavBar = UIBarButtonItem()
notiNavBar.customView = notiButton

//set right navigation bar item
self.navigationItem.rightBarButtonItems = [menuNavBar, notiNavBar]
}

override func didReceiveMemoryWarning() {
super.didReceiveMemoryWarning()
// Dispose of any resources that can be recreated.
}
func UIColorFromRGB(rgbValue: UInt) -> UIColor {
return UIColor(
red: CGFloat((rgbValue & 0xFF0000) >> 16) / 255.0,
green: CGFloat((rgbValue & 0x00FF00) >> 8) / 255.0,
blue: CGFloat(rgbValue & 0x0000FF) / 255.0,
alpha: CGFloat(1.0)
)
}
//popover menu
@IBAction func showPopOver(sender: AnyObject) {
print("menu tapped")
}
override func prepareForSegue(segue: UIStoryboardSegue, sender: AnyObject?) {
if segue.identifier == "popoverMenu" {
let popoverVC = segue.destinationViewController
popoverVC.popoverPresentationController?.delegate = self
}
}
func adaptivePresentationStyleForPresentationController(controller: UIPresentationController) -> UIModalPresentationStyle {
return UIModalPresentationStyle.None
}

}



let totalHeight = ((imgSize?.height)! + (lblSize?.height)! + padding)
self.imageEdgeInsets = UIEdgeInsets(top: -(totalHeight - (imgSize?.height)!),
left: 0.0, bottom: GlobalConst.BUTTON_CATEGORY_SIZE / 2,
right: 0.0)
self.titleEdgeInsets = UIEdgeInsets(top: GlobalConst.BUTTON_CATEGORY_SIZE / 2,
left: -((imgSize?.width)!) + ((imgSize?.width)! - (lblSize?.width)! / 2),
bottom: 0.0,
right: 0.0)
